// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.divider.MaterialDivider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SwipeItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final MaterialDivider materialDivider2;

  @NonNull
  public final TextView nameTV;

  @NonNull
  public final FrameLayout swipeLayout;

  private SwipeItemBinding(@NonNull LinearLayout rootView, @NonNull Button btnDelete,
      @NonNull LinearLayout contentLayout, @NonNull MaterialDivider materialDivider2,
      @NonNull TextView nameTV, @NonNull FrameLayout swipeLayout) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.contentLayout = contentLayout;
    this.materialDivider2 = materialDivider2;
    this.nameTV = nameTV;
    this.swipeLayout = swipeLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SwipeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SwipeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.swipe_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SwipeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.contentLayout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.materialDivider2;
      MaterialDivider materialDivider2 = ViewBindings.findChildViewById(rootView, id);
      if (materialDivider2 == null) {
        break missingId;
      }

      id = R.id.nameTV;
      TextView nameTV = ViewBindings.findChildViewById(rootView, id);
      if (nameTV == null) {
        break missingId;
      }

      id = R.id.swipeLayout;
      FrameLayout swipeLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeLayout == null) {
        break missingId;
      }

      return new SwipeItemBinding((LinearLayout) rootView, btnDelete, contentLayout,
          materialDivider2, nameTV, swipeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
