// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.divider.MaterialDivider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain3Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button checkBtn;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final MaterialDivider materialDivider1;

  @NonNull
  public final RecyclerView swipeRecyclerVew;

  private ActivityMain3Binding(@NonNull ConstraintLayout rootView, @NonNull Button checkBtn,
      @NonNull ConstraintLayout main, @NonNull MaterialDivider materialDivider1,
      @NonNull RecyclerView swipeRecyclerVew) {
    this.rootView = rootView;
    this.checkBtn = checkBtn;
    this.main = main;
    this.materialDivider1 = materialDivider1;
    this.swipeRecyclerVew = swipeRecyclerVew;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain3Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain3Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main3, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain3Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkBtn;
      Button checkBtn = ViewBindings.findChildViewById(rootView, id);
      if (checkBtn == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.materialDivider1;
      MaterialDivider materialDivider1 = ViewBindings.findChildViewById(rootView, id);
      if (materialDivider1 == null) {
        break missingId;
      }

      id = R.id.swipeRecyclerVew;
      RecyclerView swipeRecyclerVew = ViewBindings.findChildViewById(rootView, id);
      if (swipeRecyclerVew == null) {
        break missingId;
      }

      return new ActivityMain3Binding((ConstraintLayout) rootView, checkBtn, main, materialDivider1,
          swipeRecyclerVew);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
